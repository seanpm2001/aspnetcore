//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Components.Infrastructure;

[assembly: AppRazorComponentApplication]
        
namespace Microsoft.AspNetCore.Components.Infrastructure;

%GENERATEDCODEATTRIBUTE%
file class AppRazorComponentApplicationAttribute : RazorComponentApplicationAttribute
{
    private global::System.Collections.Generic.IEnumerable<global::Microsoft.AspNetCore.Components.ComponentBuilder> GetDirectDependencyComponents(string source)
    {
        yield return new global::Microsoft.AspNetCore.Components.ComponentBuilder
        {
            Source = source,
            ComponentType = typeof(global::DirectDependency.Counter),
            RenderMode = new global::Microsoft.AspNetCore.Components.Web.RenderModeServerAttribute(
                true)
        };
    }

    private global::System.Collections.Generic.IEnumerable<global::Microsoft.AspNetCore.Components.ComponentBuilder> GetTransitiveDependencyComponents(string source)
    {
        yield return new global::Microsoft.AspNetCore.Components.ComponentBuilder
        {
            Source = source,
            ComponentType = typeof(global::TransitiveDependency.TransitiveDependencyComponent),
        };
    }

    private global::System.Collections.Generic.IEnumerable<global::Microsoft.AspNetCore.Components.ComponentBuilder> GetUnitedAppComponents(string source)
    {
        yield return new global::Microsoft.AspNetCore.Components.ComponentBuilder
        {
            Source = source,
            ComponentType = typeof(global::UnitedApp.App),
        };
        yield return new global::Microsoft.AspNetCore.Components.ComponentBuilder
        {
            Source = source,
            ComponentType = typeof(global::MyApp.MyAppComponent),
        };
    }

    private global::System.Collections.Generic.IEnumerable<global::Microsoft.AspNetCore.Components.PageComponentBuilder> GetDirectDependencyPages(string source)
    {
        yield return new global::Microsoft.AspNetCore.Components.PageComponentBuilder
        {
            Source = source,
            PageType = typeof(global::DirectDependency.Counter),
            RouteTemplates = new global::System.Collections.Generic.List<string>
            {
                "/dependency",
            }
        };
    }

    private global::System.Collections.Generic.IEnumerable<global::Microsoft.AspNetCore.Components.PageComponentBuilder> GetTransitiveDependencyPages(string source)
    {
        yield break;
    }

    private global::System.Collections.Generic.IEnumerable<global::Microsoft.AspNetCore.Components.PageComponentBuilder> GetUnitedAppPages(string source)
    {
        yield return new global::Microsoft.AspNetCore.Components.PageComponentBuilder
        {
            Source = source,
            PageType = typeof(global::MyApp.MyAppComponent),
            RouteTemplates = new global::System.Collections.Generic.List<string>
            {
                "/app",
            }
        };
    }

    private global::Microsoft.AspNetCore.Components.ComponentLibraryBuilder GetDirectDependencyBuilder()
    {
        var source = "DirectDependency";
        return new global::Microsoft.AspNetCore.Components.ComponentLibraryBuilder(
            source,
            GetDirectDependencyPages(source),
            GetDirectDependencyComponents(source));
    }

    private global::Microsoft.AspNetCore.Components.ComponentLibraryBuilder GetTransitiveDependencyBuilder()
    {
        var source = "TransitiveDependency";
        return new global::Microsoft.AspNetCore.Components.ComponentLibraryBuilder(
            source,
            GetTransitiveDependencyPages(source),
            GetTransitiveDependencyComponents(source));
    }

    private global::Microsoft.AspNetCore.Components.ComponentLibraryBuilder GetUnitedAppBuilder()
    {
        var source = "UnitedApp";
        return new global::Microsoft.AspNetCore.Components.ComponentLibraryBuilder(
            source,
            GetUnitedAppPages(source),
            GetUnitedAppComponents(source));
    }

    public override global::Microsoft.AspNetCore.Components.ComponentApplicationBuilder GetBuilder()
    {
        var builder = new global::Microsoft.AspNetCore.Components.ComponentApplicationBuilder();
        builder.AddLibrary(GetDirectDependencyBuilder());
        builder.AddLibrary(GetTransitiveDependencyBuilder());
        builder.AddLibrary(GetUnitedAppBuilder());
        return builder;
    }
}
